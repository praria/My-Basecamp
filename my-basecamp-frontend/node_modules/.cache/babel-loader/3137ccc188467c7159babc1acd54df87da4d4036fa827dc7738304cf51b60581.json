{"ast":null,"code":"var _jsxFileName = \"/Users/prakash/Documents/mscs/My-Basecamp/my-basecamp-frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { createTask } from '../services/api';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    status: 'pending',\n    dueDate: '',\n    assignedTo: ''\n  });\n  const handleCreateTask = async () => {\n    await createTask(projectId, newTask);\n    setNewTask({\n      title: '',\n      description: '',\n      status: 'pending',\n      dueDate: '',\n      assignedTo: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Title\",\n      value: newTask.title,\n      onChange: e => setNewTask({\n        ...newTask,\n        title: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Description\",\n      value: newTask.description,\n      onChange: e => setNewTask({\n        ...newTask,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Status\",\n      value: newTask.status,\n      onChange: e => setNewTask({\n        ...newTask,\n        status: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Due Date\",\n      type: \"date\",\n      InputLabelProps: {\n        shrink: true\n      },\n      value: newTask.dueDate,\n      onChange: e => setNewTask({\n        ...newTask,\n        dueDate: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Assigned To\",\n      value: newTask.assignedTo,\n      onChange: e => setNewTask({\n        ...newTask,\n        assignedTo: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleCreateTask,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"uvVn+W/lwVqmvPQJ9P/OlPLhjlU=\", false, function () {\n  return [useParams];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","TextField","Button","createTask","useParams","jsxDEV","_jsxDEV","TaskForm","_s","projectId","newTask","setNewTask","title","description","status","dueDate","assignedTo","handleCreateTask","children","label","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","InputLabelProps","shrink","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/prakash/Documents/mscs/My-Basecamp/my-basecamp-frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { createTask } from '../services/api';\nimport { useParams } from 'react-router-dom';\n\nconst TaskForm = () => {\n  const { projectId } = useParams();\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    status: 'pending',\n    dueDate: '',\n    assignedTo: ''\n  });\n\n  const handleCreateTask = async () => {\n    await createTask(projectId, newTask);\n    setNewTask({\n      title: '',\n      description: '',\n      status: 'pending',\n      dueDate: '',\n      assignedTo: ''\n    });\n  };\n\n  return (\n    <div>\n      <TextField\n        label=\"Title\"\n        value={newTask.title}\n        onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n      />\n      <TextField\n        label=\"Description\"\n        value={newTask.description}\n        onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n      />\n      <TextField\n        label=\"Status\"\n        value={newTask.status}\n        onChange={(e) => setNewTask({ ...newTask, status: e.target.value })}\n      />\n      <TextField\n        label=\"Due Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        value={newTask.dueDate}\n        onChange={(e) => setNewTask({ ...newTask, dueDate: e.target.value })}\n      />\n      <TextField\n        label=\"Assigned To\"\n        value={newTask.assignedTo}\n        onChange={(e) => setNewTask({ ...newTask, assignedTo: e.target.value })}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleCreateTask}>\n        Create Task\n      </Button>\n    </div>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}