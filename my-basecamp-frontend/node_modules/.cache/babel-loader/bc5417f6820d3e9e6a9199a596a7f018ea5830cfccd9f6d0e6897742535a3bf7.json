{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst api = {\n  registerUser: userData => axios.post(`${API_URL}/users/register`, userData),\n  loginUser: userData => axios.post(`${API_URL}/users/login`, userData),\n  // User management\n  getUser: (userId, token) => axios.get(`${API_URL}/admin/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  updateUserRole: (userId, role, token) => axios.put(`${API_URL}/admin/${userId}/role`, {\n    role\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  deleteUser: (userId, token) => axios.delete(`${API_URL}/admin/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  assignAdmin: (userId, token) => axios.put(`${API_URL}/admin/${userId}/assignAdmin`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  revokeAdmin: (userId, token) => axios.put(`${API_URL}/admin/${userId}/revokeAdmin`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  // Project management\n  createProject: (projectData, token) => axios.post(`${API_URL}/projects`, projectData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  updateProject: (projectId, projectData, token) => axios.put(`${API_URL}/projects/${projectId}`, projectData, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  getAllProjects: token => axios.get(`${API_URL}/projects`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  getProject: (projectId, token) => axios.get(`${API_URL}/projects/${projectId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  deleteProject: (projectId, token) => axios.delete(`${API_URL}/projects/${projectId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  addTeamMember: (projectId, userId, token) => axios.post(`${API_URL}/projects/${projectId}/team/${userId}`, {}, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }),\n  removeTeamMember: (projectId, userId, token) => axios.delete(`${API_URL}/projects/${projectId}/team/${userId}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","registerUser","userData","post","loginUser","getUser","userId","token","get","headers","Authorization","updateUserRole","role","put","deleteUser","delete","assignAdmin","revokeAdmin","createProject","projectData","updateProject","projectId","getAllProjects","getProject","deleteProject","addTeamMember","removeTeamMember"],"sources":["/Users/prakash/Documents/mscs/My-Basecamp/my-basecamp-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\nconst api = {\n  registerUser: (userData) => axios.post(`${API_URL}/users/register`, userData),\n  loginUser: (userData) => axios.post(`${API_URL}/users/login`, userData),\n\n  // User management\n  getUser: (userId, token) => axios.get(`${API_URL}/admin/${userId}`, { headers: { Authorization: `Bearer ${token}` } }),\n  updateUserRole: (userId, role, token) => axios.put(`${API_URL}/admin/${userId}/role`, { role }, { headers: { Authorization: `Bearer ${token}` } }),\n  deleteUser: (userId, token) => axios.delete(`${API_URL}/admin/${userId}`, { headers: { Authorization: `Bearer ${token}` } }),\n  assignAdmin: (userId, token) => axios.put(`${API_URL}/admin/${userId}/assignAdmin`, {}, { headers: { Authorization: `Bearer ${token}` } }),\n  revokeAdmin: (userId, token) => axios.put(`${API_URL}/admin/${userId}/revokeAdmin`, {}, { headers: { Authorization: `Bearer ${token}` } }),\n\n  // Project management\n  createProject: (projectData, token) => axios.post(`${API_URL}/projects`, projectData, { headers: { Authorization: `Bearer ${token}` } }),\n  updateProject: (projectId, projectData, token) => axios.put(`${API_URL}/projects/${projectId}`, projectData, { headers: { Authorization: `Bearer ${token}` } }),\n  getAllProjects: (token) => axios.get(`${API_URL}/projects`, { headers: { Authorization: `Bearer ${token}` } }),\n  getProject: (projectId, token) => axios.get(`${API_URL}/projects/${projectId}`, { headers: { Authorization: `Bearer ${token}` } }),\n  deleteProject: (projectId, token) => axios.delete(`${API_URL}/projects/${projectId}`, { headers: { Authorization: `Bearer ${token}` } }),\n  addTeamMember: (projectId, userId, token) => axios.post(`${API_URL}/projects/${projectId}/team/${userId}`, {}, { headers: { Authorization: `Bearer ${token}` } }),\n  removeTeamMember: (projectId, userId, token) => axios.delete(`${API_URL}/projects/${projectId}/team/${userId}`, { headers: { Authorization: `Bearer ${token}` } }),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}