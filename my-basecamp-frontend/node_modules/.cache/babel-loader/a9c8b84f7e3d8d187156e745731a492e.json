{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst registerUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users/register`, {\n    username,\n    password,\n    role\n  });\n};\nconst loginUser = (username, password) => {\n  return axios.post(`${API_URL}/users/login`, {\n    username,\n    password\n  });\n};\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getUserById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/admin/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user details:', error);\n    return null;\n  }\n};\nconst get = () => {\n  return axios.get(`${API_URL}/projects`);\n};\nconst assignAdminPermission = userId => {\n  return axios.put(`${API_URL}/admin/${userId}/assignAdmin`);\n};\nconst revokeAdminPermission = userId => {\n  return axios.put(`${API_URL}/admin/${userId}/revokeAdmin`);\n};\nconst createUser = (username, password, role) => {\n  return axios.post(`${API_URL}/admin`, {\n    username,\n    password,\n    role\n  });\n};\nconst updateUser = (id, role) => {\n  return axios.put(`${API_URL}/admin/${id}/role`, role);\n};\nconst deleteUser = id => {\n  return axios.delete(`${API_URL}/admin/${id}`);\n};\nconst addTeamMember = (projectId, userId) => {\n  return axios.post(`${API_URL}/projects/${projectId}/team/${userId}`);\n};\nconst removeTeamMember = (projectId, userId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/team/${userId}`);\n};\nconst getProjects = () => {\n  return axios.get(`${API_URL}/projects`);\n};\nconst createProject = (name, description) => {\n  return axios.post(`${API_URL}/projects`, {\n    name,\n    description\n  });\n};\nconst updateProject = (id, name, description) => {\n  return axios.put(`${API_URL}/projects/${id}`, {\n    name,\n    description\n  });\n};\nconst getProjectById = id => {\n  return axios.get(`${API_URL}/projects/${id}`);\n};\nconst deleteProject = id => {\n  return axios.delete(`${API_URL}/projects/${id}`);\n};\nconst createTask = (projectId, title, description, status, dueDate, assignedTo) => {\n  return axios.post(`${API_URL}/projects/${projectId}/tasks`, {\n    title,\n    description,\n    status,\n    dueDate,\n    assignedTo\n  });\n};\nconst getTasks = projectId => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks`);\n};\nconst getTasksById = (projectId, taskId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\nconst updateTask = (taskId, projectId, {\n  title,\n  description,\n  status,\n  dueDate,\n  assignedTo\n}) => {\n  return axios.put(`${API_URL}/projects/${projectId}/tasks/${taskId}`, {\n    title,\n    description,\n    status,\n    dueDate,\n    projectId,\n    assignedTo\n  });\n};\nconst deleteTask = (projectId, taskId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\nconst uploadFile = (projectId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${API_URL}/files/${projectId}/upload`, formData);\n};\nconst downloadFile = fileId => {\n  return axios.get(`${API_URL}/files/${fileId}/download`, {\n    responseType: 'blob'\n  });\n};\nconst deleteFile = fileId => {\n  return axios.delete(`${API_URL}/files/${fileId}`);\n};\nexport { registerUser, loginUser, getUserById, assignAdminPermission, revokeAdminPermission, createUser, updateUser, deleteUser, addTeamMember, removeTeamMember, getProjects, createProject, getProjectById, updateProject, deleteProject, getTasks, getTasksById, createTask, updateTask, deleteTask, uploadFile, downloadFile, deleteFile };","map":{"version":3,"names":["axios","API_URL","registerUser","username","password","role","post","loginUser","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","getUserById","id","response","get","data","console","assignAdminPermission","userId","put","revokeAdminPermission","createUser","updateUser","deleteUser","delete","addTeamMember","projectId","removeTeamMember","getProjects","createProject","name","description","updateProject","getProjectById","deleteProject","createTask","title","status","dueDate","assignedTo","getTasks","getTasksById","taskId","updateTask","deleteTask","uploadFile","file","formData","FormData","append","downloadFile","fileId","responseType","deleteFile"],"sources":["/Users/prakash/Documents/mscs/My-Basecamp/my-basecamp-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\nconst registerUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users/register`, { username, password, role });\n};\n\nconst loginUser = (username, password) => {\n  return axios.post(`${API_URL}/users/login`, { username, password });\n};\n\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nconst getUserById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/admin/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user details:', error);\n    return null;\n  }\n};\n\nconst get = () => {\n  return axios.get(`${API_URL}/projects`);\n};\n\nconst assignAdminPermission = (userId) => {\n  return axios.put(`${API_URL}/admin/${userId}/assignAdmin`);\n}\n\nconst revokeAdminPermission = (userId) => {\n  return axios.put(`${API_URL}/admin/${userId}/revokeAdmin`);\n}\n\nconst createUser = (username, password, role) => {\n  return axios.post(`${API_URL}/admin`, { username, password, role });\n};\n\nconst updateUser = (id, role) => {\n  return axios.put(`${API_URL}/admin/${id}/role`, role);\n};\n\nconst deleteUser = (id) => {\n  return axios.delete(`${API_URL}/admin/${id}`);\n};\n\nconst addTeamMember = (projectId, userId) => {\n  return axios.post(`${API_URL}/projects/${projectId}/team/${userId}`);\n}\n\nconst removeTeamMember = (projectId, userId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/team/${userId}`);\n}\n\nconst getProjects = () => {\n  return axios.get(`${API_URL}/projects`);\n};\n\nconst createProject = (name, description) => {\n  return axios.post(`${API_URL}/projects`, {name, description});\n};\n\nconst updateProject = (id, name, description) => {\n  return axios.put(`${API_URL}/projects/${id}`, {name, description});\n};\n\nconst getProjectById = (id) => {\n  return axios.get(`${API_URL}/projects/${id}`);\n}\n\nconst deleteProject = (id) => {\n  return axios.delete(`${API_URL}/projects/${id}`);\n};\n\nconst createTask = (projectId, title, description, status, dueDate, assignedTo) => {\n  return axios.post(`${API_URL}/projects/${projectId}/tasks`, {title, description, status, dueDate, assignedTo});\n};\n\nconst getTasks = (projectId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks`);\n};\n\nconst getTasksById = (projectId, taskId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\n\nconst updateTask = (taskId, projectId, {title, description, status, dueDate, assignedTo}) => {\n  return axios.put(`${API_URL}/projects/${projectId}/tasks/${taskId}`, {title, description, status, dueDate, projectId, assignedTo});\n};\n\nconst deleteTask = (projectId, taskId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\n\nconst uploadFile = (projectId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${API_URL}/files/${projectId}/upload`, formData);\n};\n\nconst downloadFile = (fileId) => {\n  return axios.get(`${API_URL}/files/${fileId}/download`, { responseType: 'blob' });\n};\n\nconst deleteFile = (fileId) => {\n  return axios.delete(`${API_URL}/files/${fileId}`);\n};\n\nexport {\n  registerUser,\n  loginUser,\n  getUserById,\n  assignAdminPermission,\n  revokeAdminPermission,\n  createUser,\n  updateUser,\n  deleteUser,\n  addTeamMember,\n  removeTeamMember,\n  getProjects,\n  createProject,\n  getProjectById,\n  updateProject,\n  deleteProject,\n  getTasks,\n  getTasksById,\n  createTask,\n  updateTask,\n  deleteTask,\n  uploadFile,\n  downloadFile,\n  deleteFile\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}