{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst registerUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users/register`, {\n    username,\n    password,\n    role\n  });\n};\nconst loginUser = (username, password) => {\n  return axios.post(`${API_URL}/users/login`, {\n    username,\n    password\n  });\n};\nexport const getUserById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/adm/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user details:', error);\n    return null;\n  }\n};\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nconst getAllUsers = () => {\n  return axios.get(`${API_URL}/users`);\n};\nconst createUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users`, {\n    username,\n    password,\n    role\n  });\n};\nconst updateUser = (id, data) => {\n  return axios.put(`${API_URL}/users/${id}`, data);\n};\nconst deleteUser = id => {\n  return axios.delete(`${API_URL}/users/${id}`);\n};\nconst getProjects = () => {\n  return axios.get(`${API_URL}/projects`);\n};\nconst createProject = data => {\n  return axios.post(`${API_URL}/projects`, data);\n};\nconst updateProject = (id, data) => {\n  return axios.put(`${API_URL}/projects/${id}`, data);\n};\nconst deleteProject = id => {\n  return axios.delete(`${API_URL}/projects/${id}`);\n};\nconst getTasks = projectId => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks`);\n};\nconst createTask = (projectId, data) => {\n  return axios.post(`${API_URL}/projects/${projectId}/tasks`, data);\n};\nconst updateTask = (projectId, taskId, data) => {\n  return axios.put(`${API_URL}/projects/${projectId}/tasks/${taskId}`, data);\n};\nconst deleteTask = (projectId, taskId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\nconst uploadFile = (projectId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${API_URL}/projects/${projectId}/files`, formData);\n};\nconst downloadFile = (projectId, fileId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/files/${fileId}`, {\n    responseType: 'blob'\n  });\n};\nconst deleteFile = (projectId, fileId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/files/${fileId}`);\n};\nexport { registerUser, loginUser, getAllUsers, createUser, updateUser, deleteUser, getProjects, createProject, updateProject, deleteProject, getTasks, createTask, updateTask, deleteTask, uploadFile, downloadFile, deleteFile };","map":{"version":3,"names":["axios","API_URL","registerUser","username","password","role","post","loginUser","getUserById","id","response","get","data","error","console","interceptors","request","use","config","token","localStorage","getItem","headers","Promise","reject","getAllUsers","createUser","updateUser","put","deleteUser","delete","getProjects","createProject","updateProject","deleteProject","getTasks","projectId","createTask","updateTask","taskId","deleteTask","uploadFile","file","formData","FormData","append","downloadFile","fileId","responseType","deleteFile"],"sources":["/Users/prakash/Documents/mscs/My-Basecamp/my-basecamp-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/api';\n\nconst registerUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users/register`, { username, password, role });\n};\n\nconst loginUser = (username, password) => {\n  return axios.post(`${API_URL}/users/login`, { username, password });\n};\n\nexport const getUserById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/adm/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching user details:', error);\n    return null;\n  }\n};\n\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\nconst getAllUsers = () => {\n  return axios.get(`${API_URL}/users`);\n};\n\nconst createUser = (username, password, role) => {\n  return axios.post(`${API_URL}/users`, { username, password, role });\n};\n\nconst updateUser = (id, data) => {\n  return axios.put(`${API_URL}/users/${id}`, data);\n};\n\nconst deleteUser = (id) => {\n  return axios.delete(`${API_URL}/users/${id}`);\n};\n\nconst getProjects = () => {\n  return axios.get(`${API_URL}/projects`);\n};\n\nconst createProject = (data) => {\n  return axios.post(`${API_URL}/projects`, data);\n};\n\nconst updateProject = (id, data) => {\n  return axios.put(`${API_URL}/projects/${id}`, data);\n};\n\nconst deleteProject = (id) => {\n  return axios.delete(`${API_URL}/projects/${id}`);\n};\n\nconst getTasks = (projectId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/tasks`);\n};\n\nconst createTask = (projectId, data) => {\n  return axios.post(`${API_URL}/projects/${projectId}/tasks`, data);\n};\n\nconst updateTask = (projectId, taskId, data) => {\n  return axios.put(`${API_URL}/projects/${projectId}/tasks/${taskId}`, data);\n};\n\nconst deleteTask = (projectId, taskId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/tasks/${taskId}`);\n};\n\nconst uploadFile = (projectId, file) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  return axios.post(`${API_URL}/projects/${projectId}/files`, formData);\n};\n\nconst downloadFile = (projectId, fileId) => {\n  return axios.get(`${API_URL}/projects/${projectId}/files/${fileId}`, { responseType: 'blob' });\n};\n\nconst deleteFile = (projectId, fileId) => {\n  return axios.delete(`${API_URL}/projects/${projectId}/files/${fileId}`);\n};\n\nexport {\n  registerUser,\n  loginUser,\n  getAllUsers,\n  createUser,\n  updateUser,\n  deleteUser,\n  getProjects,\n  createProject,\n  updateProject,\n  deleteProject,\n  getTasks,\n  createTask,\n  updateTask,\n  deleteTask,\n  uploadFile,\n  downloadFile,\n  deleteFile\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}